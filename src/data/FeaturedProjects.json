[
  {
    "title": "Gesture Path",
    "description": "Real-time hand gesture recognition and path tracking using OpenCV, MediaPipe, and TensorFlow.",
    "link": "https://github.com/NetalSarda/Gesture__Path.git",
    "technologyUsed": [
      "Python",
      "OpenCV",
      "MediaPipe",
      "TensorFlow",
      "NumPy",
      "Pandas",
      "scikit-learn",
      "Matplotlib"
    ],
    "features": [
      "Real-Time Recognition: Tracks and classifies hand gestures in real-time using a webcam feed.",
      "Preprocessing Pipeline: Implemented data cleaning and preprocessing using NumPy and Pandas to improve accuracy.",
      "Gesture Classification: Used scikit-learn for model training and evaluation to classify gesture patterns.",
      "Visualization: Plotted gesture path trajectories and classification results using Matplotlib for interpretability."
    ],
    "image": "/portfolio/projects/gesturepath.png"
  },
  {
    "title": "Git Connect AI",
    "description": "An AI-powered platform that simplifies collaboration by letting contributors query repositories, analyze commits, and manage team meetings intelligently.",
    "link": "https://git-connect-ai.vercel.app",
    "technologyUsed": [
      "Next.js",
      "TypeScript",
      "Gemini",
      "LangChain",
      "Assembly AI",
      "GitHub API"
    ],
    "features": [
      "AI-Powered Code Understanding: Leverages Gemini and LangChain to explain code logic and structure within Git repositories.",
      "Contributor Query System: Allows users to ask natural language questions about code and view exact commit references.",
      "Meeting & Documentation Integration: Uses Assembly AI to analyze discussions and auto-generate meeting documentation.",
      "Improved Onboarding: Helps new contributors get context quickly with auto-summary and code walkthrough features."
    ],
    "image": "/portfolio/projects/gitconnectai.png"
  },
  {
    "title": "FacePings",
    "description": "A face recognition-based attendance system using Python, OpenCV, and the face_recognition library for real-time identification and logging.",
    "link": "https://github.com/NetalSarda/FacePings.git",
    "technologyUsed": [
      "Python",
      "OpenCV",
      "face_recognition",
      "NumPy",
      "SQLite"
    ],
    "features": [
      "Face Detection and Encoding: Real-time face detection using webcam input and encoding with the face_recognition library.",
      "Attendance Logging: Automatically marks and logs attendance by matching captured faces against known encodings.",
      "Secure Design: Sensitive credentials and images are handled securely to follow best practices.",
      "Database Integration: Attendance records are stored and retrieved using an SQLite database."
    ],
    "image": "/portfolio/projects/facepings.png"
  }
]
