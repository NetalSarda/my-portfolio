[
  {
    "title": "Gesture Path",
    "description": "Real-time hand gesture recognition and path tracking using OpenCV, MediaPipe, and TensorFlow.",
    "link": "https://github.com/NetalSarda/Gesture__Path.git",
    "technologyUsed": [
      "Python",
      "OpenCV",
      "MediaPipe",
      "TensorFlow",
      "NumPy",
      "Pandas",
      "scikit-learn",
      "Matplotlib"
    ],
    "features": [
      "Real-Time Recognition: Tracks and classifies hand gestures using webcam input.",
      "Preprocessing: Used NumPy and Pandas for dataset cleaning and frame filtering.",
      "Classification: Leveraged scikit-learn models to accurately classify user gestures.",
      "Visualization: Real-time gesture visualization with plotted paths using Matplotlib."
    ],
    "image": "/portfolio/projects/gesture_path.png"
  },
  {
    "title": "Git Connect AI",
    "description": "An AI-powered platform that simplifies collaboration by letting contributors query repositories, analyze commits, and manage team meetings intelligently.",
    "link": "https://git-connect-ai.vercel.app",
    "technologyUsed": [
      "Next.js",
      "TypeScript",
      "Gemini",
      "LangChain",
      "Assembly AI",
      "GitHub API"
    ],
    "features": [
      "AI Code Understanding: Uses Gemini and LangChain to explain complex Git codebases.",
      "Query Repositories: Ask natural questions and locate relevant commits and files.",
      "Meeting Analysis: Uses Assembly AI for transcript generation and documentation.",
      "Smart Onboarding: Auto-generated insights to onboard new contributors efficiently."
    ],
    "image": "/portfolio/projects/git_connect_ai.png"
  },
  {
    "title": "FacePings",
    "description": "A face recognition-based attendance system built in Python using OpenCV and face_recognition for secure real-time face detection and logging.",
    "link": "https://github.com/NetalSarda/FacePings.git",
    "technologyUsed": [
      "Python",
      "OpenCV",
      "face_recognition",
      "NumPy",
      "SQLite"
    ],
    "features": [
      "Real-Time Face Detection: Uses webcam and face encodings to match known users.",
      "Secure Logging: Logs time-stamped attendance into a local database securely.",
      "Minimal UI: Lightweight desktop interface for quick access and monitoring.",
      "Best Practices: Sensitive image data is securely handled and not exposed."
    ],
    "image": "/portfolio/projects/facepings.png"
  },
  {
    "title": "AimBooster",
    "description": "A browser-based aim training game where players must quickly shoot a moving spaceship target using keyboard/mouse interactions.",
    "link": "",
    "technologyUsed": ["HTML", "CSS", "JavaScript", "Canvas API", "GSAP"],
    "features": [
      "Dynamic Targeting: The spaceship moves across the canvas in random directions and speeds.",
      "Hit Tracking: Maintains accuracy and hit-rate stats for every session.",
      "Keyboard Interactions: Option to switch between mouse clicks and keyboard hits.",
      "GSAP Animations: Smooth transitions and feedback using advanced CSS and JS animations."
    ],
    "image": "/portfolio/projects/aimbooster.png"
  },
  {
    "title": "Monsters Rolodex",
    "description": "A beginner React.js project featuring a dynamic search interface that filters a list of monsters using input from the user.",
    "link": "",
    "technologyUsed": ["React.js", "JavaScript", "CSS"],
    "features": [
      "Real-time Search Filtering: Instant updates as the user types.",
      "Props & State: Reinforces core React concepts with reusable components.",
      "Static API Data Fetching: Pulls mock monster data and maps into UI cards."
    ],
    "image": "/portfolio/projects/monsters_rolodex.png"
  },
  {
    "title": "Password Torch UI",
    "description": "A creative password visibility toggle UI using a 'torchlight' animation — when the torch is on, the password is visible, otherwise hidden.",
    "link": "",
    "technologyUsed": ["HTML", "CSS", "JavaScript", "CSS Keyframes", "DOM Manipulation"],
    "features": [
      "Torchlight Animation: Used CSS keyframes to simulate light-on and light-off transitions.",
      "Custom Visibility Toggle: Replaces generic eye icon with animated torch switch.",
      "Modern UI Design: Clean, responsive layout with shadow-based depth simulation."
    ],
    "image": "/portfolio/projects/password_torch.png"
  },
  {
    "title": "PawSwipe",
    "description": "A humorous Tinder-style swipe application for dogs and pets. Built with a minimalist aesthetic and swipe-left/right logic.",
    "link": "",
    "technologyUsed": ["HTML", "CSS", "JavaScript", "DOM Events", "CSS Grid"],
    "features": [
      "Swipe Interface: Left/right swipe to accept or reject dog profiles.",
      "Card Stack UI: Dog cards dynamically update with animations and transitions.",
      "Responsive Design: Mobile-friendly layout for pet lovers on the go.",
      "Creative Branding: Designed to parody Tinder while offering a fun experience."
    ],
    "image": "/portfolio/projects/pawswipe.png"
  },
  {
    "title": "Servico",
    "description": "A service-based e-commerce platform to book daily services like electricians, mechanics, or chefs — complete with calendar selection and admin dashboard.",
    "link": "",
    "technologyUsed": ["React.js", "Node.js", "Express.js", "MongoDB", "Tailwind CSS"],
    "github": "https://github.com/Khanba22/servico-frontend",
    "features": [
      "Booking System: Allows users to select service, date, time, and confirm bookings.",
      "Calendar Integration: Service availability linked to custom calendar slots.",
      "Admin Panel: Admin can manage bookings, availability, and worker assignments.",
      "Secure Backend: API routes for authentication and data handling with JWT support."
    ],
    "image": "/portfolio/projects/servico.png"
  },
  {
    "title": "System Log Analyzer",
    "description": "A blockchain-powered security solution to log, track, and verify system-level activities in real-time — built as part of SIH problem statement.",
    "link": "",
    "technologyUsed": [
      "Solidity",
      "Ethereum",
      "Blockchain",
      "React.js",
      "Node.js",
      "Web3.js",
      "IPFS"
    ],
    "features": [
      "Event Logging: Captures system activity (file access, login attempts, etc.) and pushes it to a secure blockchain ledger.",
      "Immutable Audit Trail: Blockchain ensures tamper-proof activity logs for forensic analysis.",
      "Web3 Interface: Frontend dashboard to view, verify, and analyze logs in real time.",
      "Decentralized Storage: Utilizes IPFS to store large logs while keeping hashes on-chain."
    ],
    "image": "/portfolio/projects/log_analyzer.png"
  }
]
